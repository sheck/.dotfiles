if &compatible
  set nocompatible
end

call plug#begin('~/.vim/bundle')

Plug 'tpope/vim-sensible'
Plug 'srcery-colors/srcery-vim'

" If fzf has already been installed via Homebrew, use the existing fzf
" Otherwise, install fzf. The `--all` flag makes fzf accessible outside of vim
if isdirectory("/usr/local/opt/fzf")
  Plug '/usr/local/opt/fzf'
else
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
endif
Plug 'junegunn/fzf.vim'

Plug 'AndrewRadev/splitjoin.vim'
" Plug 'MaxMEllon/vim-jsx-pretty'
" Plug 'ctrlpvim/ctrlp.vim'
" Plug 'darthdeus/a.vim'
" Plug 'dense-analysis/ale'

Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'neoclide/coc-json', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-tsserver', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-solargraph', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-eslint', {'do': 'yarn install --frozen-lockfile'}

Plug 'pechorin/any-jump.vim'
" Plug 'samoshkin/vim-mergetool'
" Plug 'simnalamburt/vim-mundo'
" Plug 'slim-template/vim-slim'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
" Plug 'vim-scripts/YankRing.vim'
Plug 'yuezk/vim-js'

Plug 'janko-m/vim-test'

call plug#end()
